{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jnsil\\\\Desktop\\\\Coding Bootcamp\\\\ClickyGame\\\\client\\\\src\\\\components\\\\Card.js\";\nimport React, { useState } from \"react\";\nimport AJ7 from \"../assets/images/AJ7.jpg\";\nimport GW1 from \"../assets/images/GW1.jpg\";\nimport JA2 from \"../assets/images/JA2.jpg\";\nimport JKP11 from \"../assets/images/JKP11.jpg\";\nimport JM4 from \"../assets/images/JM4.jpg\";\nimport JM5 from \"../assets/images/JM5.jpg\";\nimport JQA6 from \"../assets/images/JQA6.jpg\";\nimport JT10 from \"../assets/images/JT10.jpg\";\nimport MVB8 from \"../assets/images/MVB8.jpg\";\nimport TJ3 from \"../assets/images/TJ3.jpg\";\nimport WHH9 from \"../assets/images/WHH9.jpg\";\nimport ZT12 from \"../assets/images/ZT12.jpg\";\n\nfunction Card() {\n  let [state, setState] = useState(\"notPlaying\");\n  let pictureArray = [AJ7, GW1, JA2, JKP11, JM4, JM5, JQA6, JT10, MVB8, TJ3, WHH9, ZT12];\n  let clickedArray = [];\n\n  function shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [a[i], a[j]] = [a[j], a[i]];\n    }\n\n    return a;\n  }\n\n  ;\n  shuffle(pictureArray);\n\n  function handleClick(e, data) {\n    console.log(data);\n  }\n\n  function click() {\n    setState(\"playing\");\n    shuffle(pictureArray);\n    console.log(this);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"pictureBox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, pictureArray.map(result => React.createElement(\"img\", {\n    onClick: e => handleClick(e, data),\n    alt: \"clickPic\",\n    src: result,\n    id: result,\n    className: \"image\",\n    width: \"175x\",\n    height: \"175px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })));\n}\n\n;\nexport default Card;","map":{"version":3,"sources":["C:/Users/jnsil/Desktop/Coding Bootcamp/ClickyGame/client/src/components/Card.js"],"names":["React","useState","AJ7","GW1","JA2","JKP11","JM4","JM5","JQA6","JT10","MVB8","TJ3","WHH9","ZT12","Card","state","setState","pictureArray","clickedArray","shuffle","a","i","length","j","Math","floor","random","handleClick","e","data","console","log","click","map","result"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;;AAEA,SAASC,IAAT,GAAgB;AACZ,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,YAAD,CAAhC;AACA,MAAIgB,YAAY,GAAG,CAACf,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,KAAhB,EAAuBC,GAAvB,EAA4BC,GAA5B,EAAiCC,IAAjC,EAAuCC,IAAvC,EAA6CC,IAA7C,EAAmDC,GAAnD,EAAwDC,IAAxD,EAA8DC,IAA9D,CAAnB;AACA,MAAIK,YAAY,GAAG,EAAnB;;AAGA,WAASC,OAAT,CAAiBC,CAAjB,EAAoB;AAChB,SAAK,IAAIC,CAAC,GAAGD,CAAC,CAACE,MAAF,GAAW,CAAxB,EAA2BD,CAAC,GAAG,CAA/B,EAAkCA,CAAC,EAAnC,EAAuC;AACnC,YAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAV;AACA,OAACD,CAAC,CAACC,CAAD,CAAF,EAAOD,CAAC,CAACG,CAAD,CAAR,IAAe,CAACH,CAAC,CAACG,CAAD,CAAF,EAAOH,CAAC,CAACC,CAAD,CAAR,CAAf;AACH;;AACD,WAAOD,CAAP;AACH;;AAAA;AAEDD,EAAAA,OAAO,CAACF,YAAD,CAAP;;AAEA,WAASU,WAAT,CAAqBC,CAArB,EAAwBC,IAAxB,EAA8B;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH;;AAED,WAASG,KAAT,GAAiB;AACbhB,IAAAA,QAAQ,CAAC,SAAD,CAAR;AACAG,IAAAA,OAAO,CAACF,YAAD,CAAP;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH;;AAED,SACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKd,YAAY,CAACgB,GAAb,CAAiBC,MAAM,IACpB;AAAK,IAAA,OAAO,EAAGN,CAAD,IAAOD,WAAW,CAACC,CAAD,EAAIC,IAAJ,CAAhC;AAA2C,IAAA,GAAG,EAAC,UAA/C;AAA0D,IAAA,GAAG,EAAEK,MAA/D;AAAuE,IAAA,EAAE,EAAEA,MAA3E;AAAmF,IAAA,SAAS,EAAC,OAA7F;AAAqG,IAAA,KAAK,EAAC,MAA3G;AAAkH,IAAA,MAAM,EAAC,OAAzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CADJ;AAOH;;AAAA;AAED,eAAepB,IAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport AJ7 from \"../assets/images/AJ7.jpg\";\r\nimport GW1 from \"../assets/images/GW1.jpg\";\r\nimport JA2 from \"../assets/images/JA2.jpg\";\r\nimport JKP11 from \"../assets/images/JKP11.jpg\";\r\nimport JM4 from \"../assets/images/JM4.jpg\";\r\nimport JM5 from \"../assets/images/JM5.jpg\";\r\nimport JQA6 from \"../assets/images/JQA6.jpg\";\r\nimport JT10 from \"../assets/images/JT10.jpg\";\r\nimport MVB8 from \"../assets/images/MVB8.jpg\";\r\nimport TJ3 from \"../assets/images/TJ3.jpg\";\r\nimport WHH9 from \"../assets/images/WHH9.jpg\";\r\nimport ZT12 from \"../assets/images/ZT12.jpg\";\r\n\r\nfunction Card() {\r\n    let [state, setState] = useState(\"notPlaying\");\r\n    let pictureArray = [AJ7, GW1, JA2, JKP11, JM4, JM5, JQA6, JT10, MVB8, TJ3, WHH9, ZT12];\r\n    let clickedArray = [];\r\n\r\n\r\n    function shuffle(a) {\r\n        for (let i = a.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [a[i], a[j]] = [a[j], a[i]];\r\n        }\r\n        return a;\r\n    };\r\n\r\n    shuffle(pictureArray);\r\n\r\n    function handleClick(e, data) {\r\n        console.log(data);\r\n    }\r\n\r\n    function click() {\r\n        setState(\"playing\");\r\n        shuffle(pictureArray);\r\n        console.log(this);\r\n    }\r\n\r\n    return (\r\n        <div className=\"pictureBox\">\r\n            {pictureArray.map(result => (\r\n                <img onClick={(e) => handleClick(e, data)} alt=\"clickPic\" src={result} id={result} className=\"image\" width=\"175x\" height=\"175px\" />\r\n            ))}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Card;"]},"metadata":{},"sourceType":"module"}